#
# this is sample configuration for TED
#

#
# TED config
#

# Few systems can share same db table for their tasks.
# To separate those tasks, a systemId must be provided.
# The systemId must be unique among other systems.
# Each system will take only its own tasks.
# Can be useful and for testing/development purpose also -
# having own system id will prevent from steeling tasks by other developers.
# SystemId is required, consist of letters, numbers or "._-" and must be <= 8 length.
#
ted.systemId = sample

# Driver internals.
# - initDelayMs - start driver after n milliseconds after system startup
# - intervalDriverMs - how frequently driver will check for new tasks in db
# - intervalMaintenanceMs - how frequently driver will do maintenance tasks
#
ted.driver.initDelayMs = 5000
ted.driver.intervalDriverMs = 700
ted.driver.intervalMaintenanceMs = 60000

# Maintenance config
# - oldTaskArchiveDays - how long to keep finished tasks in days (later they will be deleted)
#
ted.maintenance.oldTaskArchiveDays = 35

# Task default settings (will be used if not defined for task individually)
# - retryPauses - intervals for retries.
# - timeoutMinutes - task in status WORK longer than this time will be considered as dead and it's
#       status will be changed to RETRY. Be aware - it is expected that tasks are retry-able.
# - batchTimeoutMinutes - timeout for batch tasks (how long to wait for finish all subtasks)
#
ted.taskDefault.retryPauses = 12s,36s,90s,300s,16m,50m,2h,5h,7h,14h,14h;dispersion=10
ted.taskDefault.timeoutMinutes = 30
ted.taskDefault.batchTimeoutMinutes = 180

#
# Channels
#

# Channels configuration will be recognized by prefix "ted.channel.<CHANNEL>".
# Channel parameters
# - workerCount - thread count for this channel
# - taskBuffer - buffer of task. Pack of tasks will be retrieved from db and will be held in this buffer to wait for execution
# - primeOnly - if 'yes', then will be active only in prime instance
# Channel name is limited to 5 symbols of letters or numbers

# The MAIN channel is default for task and will be created anyway.
# The QUEUE channel is for queue events processing, if it is enabled.
# Other channels are optional and can be configured for various purposes.
#
ted.channel.MAIN.workerCount = 5
ted.channel.MAIN.taskBuffer = 100

# Examples of use of channel

# LONG channel can be used  long-term jobs. Reason of separating them from other short tasks is to avoid use all MAIN threads and limit parallel processing of many CPU heavy tasks
#ted.channel.LONG.workerCount = 2
#ted.channel.LONG.bufferSize = 0

# IDLE channel can be used for light middle-term tasks, which mostly waits for something (e.g. while external system will do it task).
#      Such tasks can be executed in many thread w/o big load on CPU.
#ted.channel.IDLE.workerCount = 20
#ted.channel.IDLE.bufferSize = 0


#
# Tasks
#

# Task must be registered in Java code. But it's configuration can be set up in this file (these parameters will overwrite ones in Java)
# Task configuration will be recognized by prefix "ted.task.<TASK>".
# Task parameters:
# - channel - to which channel assign task
# - retryPauses - retry pauses, if task require different retry times than default
# - timeoutMinutes - if task is long-term (executes longer than 30 min), timeout should be increased

# Example of task configuration
#ted.task.MYTASK.channel = MAIN
#ted.task.MYTASK.retryPauses = 20s,10s*5,1m*20,5m*100;dispersion=10

